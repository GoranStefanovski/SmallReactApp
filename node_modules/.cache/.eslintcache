[{"/home/goran/development/repositories/small-react-app/src/index.tsx":"1","/home/goran/development/repositories/small-react-app/src/reportWebVitals.ts":"2","/home/goran/development/repositories/small-react-app/src/App.tsx":"3","/home/goran/development/repositories/small-react-app/src/_components/InfoChat.tsx":"4","/home/goran/development/repositories/small-react-app/src/_components/RecordingTab.tsx":"5","/home/goran/development/repositories/small-react-app/src/_components/SendRecording.tsx":"6","/home/goran/development/repositories/small-react-app/src/_components/FinalStep.tsx":"7","/home/goran/development/repositories/small-react-app/src/app/store/store.js":"8","/home/goran/development/repositories/small-react-app/src/features/recording/recordingSlice.js":"9","/home/goran/development/repositories/small-react-app/src/features/message/messageSlice.js":"10","/home/goran/development/repositories/small-react-app/src/_components/MyStopwatch.tsx":"11","/home/goran/development/repositories/small-react-app/src/features/counting/countingSlice.js":"12","/home/goran/development/repositories/small-react-app/src/features/countdown/countdownSlice.js":"13"},{"size":682,"mtime":1674759505417,"results":"14","hashOfConfig":"15"},{"size":425,"mtime":1674301625595,"results":"16","hashOfConfig":"15"},{"size":954,"mtime":1674831618100,"results":"17","hashOfConfig":"15"},{"size":3954,"mtime":1674854626768,"results":"18","hashOfConfig":"15"},{"size":1915,"mtime":1674995445706,"results":"19","hashOfConfig":"15"},{"size":1003,"mtime":1674995956603,"results":"20","hashOfConfig":"15"},{"size":931,"mtime":1674832874206,"results":"21","hashOfConfig":"15"},{"size":516,"mtime":1674831092121,"results":"22","hashOfConfig":"15"},{"size":395,"mtime":1674757139150,"results":"23","hashOfConfig":"15"},{"size":474,"mtime":1674747720750,"results":"24","hashOfConfig":"15"},{"size":1108,"mtime":1674854630820,"results":"25","hashOfConfig":"15"},{"size":542,"mtime":1674759503717,"results":"26","hashOfConfig":"15"},{"size":417,"mtime":1674831392233,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},"1ke30z6",{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/home/goran/development/repositories/small-react-app/src/index.tsx",[],[],[],"/home/goran/development/repositories/small-react-app/src/reportWebVitals.ts",[],[],"/home/goran/development/repositories/small-react-app/src/App.tsx",[],[],"/home/goran/development/repositories/small-react-app/src/_components/InfoChat.tsx",["70"],[],"import React from 'react';\nimport info from '../assets/info.svg'\nimport { useState, useEffect } from 'react';\nimport closeBtn from '../../src/assets/black_close.svg';\nimport { toggle } from '../../src/features/recording/recordingSlice'\nimport { isMessage } from '../../src/features/message/messageSlice'\nimport { isCountdownActive } from '../../src/features/countdown/countdownSlice'\nimport { useSelector, useDispatch } from 'react-redux'\n\nfunction InfoChat(props: any) {\n  const isCountdown = useSelector((state: any) => state.countdown.value);\n  const isCounting = useSelector((state: any) => state.counting.value);\n  const isRecording = useSelector((state: any) => state.recording.value);\n  const dispatch = useDispatch();\n  var recordings = [\n    { id: 1, text: 'Message with recording', state: 'Recording' },\n    { id: 2, text: 'Message with audio only', state: 'Audio' },\n    { id: 3, text: 'Message only', state: 'Message' },\n  ];\n\n  const [isPopUpShown, setIsPopUpShown] = useState(false);\n  const [isDropdownShown, setIsDropdownShown] = useState(false);\n  const [selectedValue, setIsselectedValue] = useState('Recordings');\n  const [timer, setTimer] = useState(3);\n\n\n  const OpenPopUp = () => {\n    setIsPopUpShown(current => !current);\n  };\n\n  const closePopUp = () => {\n    setIsPopUpShown(current => !current)\n  }\n\n  const OpenDropdown = () => {\n    setIsDropdownShown(current => !current);\n  };\n\n  function startCountdown(text: any) {\n    setIsselectedValue(text)\n    setIsPopUpShown(current => !current);\n    if (text === 'Message') {\n      dispatch(isMessage());\n    } else {\n      dispatch(isCountdownActive());\n      setIsDropdownShown(current => !current);\n      setTimeout(() => {\n        dispatch(toggle());\n        dispatch(isCounting());\n      }, 3000);\n    }\n  }\n\n  useEffect(() => {\n    if (isCountdown && timer > 0) {\n      const intervalId = setTimeout(() => {\n        setTimer(timer - 1);\n      }, 1000);\n      return () => clearInterval(intervalId);\n    } else if (!isCountdown) {\n      setTimer(3);\n      dispatch(isCountdownActive());\n    }\n  }, [isCountdown, timer]);\n\n\n  function ListItem(rec: any) {\n    return <li onClick={() => startCountdown(rec.value)} value={rec.id} key={rec.id}>\n      {rec.text}\n    </li>\n  }\n\n  const listItems = recordings.map((object) =>\n    <ListItem key={object.text.toString()} value={object.state} text={object.text} />\n  );\n\n  return (\n    <div className={isRecording ? '' : 'infoChat'}>\n      <span style={{ display: !isPopUpShown ? 'none' : 'flex' }} className=\"infoChat_popup-modal\">\n        <span className='infoChat_popup infoChat_popup-modal_inner'>\n          <h3 className='infoChat_popup-title'>\n            Having an issue? Send <br className='infoChat_popup-title-break'></br> us a recording of it!\n          </h3>\n          <div>\n            <span className='infoChat_popup-dropdown-input' onClick={OpenDropdown}>\n              <span className='infoChat_popup-dropdown'>{selectedValue}</span>\n              <span className={!isDropdownShown ? 'infoChat_popup-dropdown-opened' : 'infoChat_popup-dropdown-closed'}></span>\n            </span>\n            <span className='infoChat_popup_modal-close'><img onClick={closePopUp} src={closeBtn} alt=\"\" /></span>\n            <ul className='infoChat_popup-list'>\n              {!isDropdownShown ? listItems : ''}\n            </ul>\n            {isPopUpShown ? <div className='infoChat_popup-list-md-wrap'>\n              <ul className='infoChat_popup-list-md'>\n                {listItems}\n              </ul>\n            </div> : ''}\n          </div>\n        </span>\n      </span>\n      <img style={{ display: isRecording ? 'none' : 'flex' }} onClick={OpenPopUp} src={info} className=\"\" alt=\"Info Icon\" />\n      <div style={{ display: !isCountdown || timer === 0 ? 'none' : 'flex' }} className=\"countdown\">\n        <div className='countdown_inner'>\n          {timer}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default InfoChat;\n","/home/goran/development/repositories/small-react-app/src/_components/RecordingTab.tsx",[],[],"/home/goran/development/repositories/small-react-app/src/_components/SendRecording.tsx",[],[],"/home/goran/development/repositories/small-react-app/src/_components/FinalStep.tsx",[],[],"/home/goran/development/repositories/small-react-app/src/app/store/store.js",[],[],[],"/home/goran/development/repositories/small-react-app/src/features/recording/recordingSlice.js",[],[],"/home/goran/development/repositories/small-react-app/src/features/message/messageSlice.js",[],[],"/home/goran/development/repositories/small-react-app/src/_components/MyStopwatch.tsx",[],[],"/home/goran/development/repositories/small-react-app/src/features/counting/countingSlice.js",[],[],"/home/goran/development/repositories/small-react-app/src/features/countdown/countdownSlice.js",[],[],{"ruleId":"71","severity":1,"message":"72","line":64,"column":6,"nodeType":"73","endLine":64,"endColumn":26,"suggestions":"74"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["75"],{"desc":"76","fix":"77"},"Update the dependencies array to be: [dispatch, isCountdown, timer]",{"range":"78","text":"79"},[2076,2096],"[dispatch, isCountdown, timer]"]